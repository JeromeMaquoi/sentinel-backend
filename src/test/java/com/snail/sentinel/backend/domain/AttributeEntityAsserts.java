package com.snail.sentinel.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AttributeEntityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttributeEntityAllPropertiesEquals(AttributeEntity expected, AttributeEntity actual) {
        assertAttributeEntityAutoGeneratedPropertiesEquals(expected, actual);
        assertAttributeEntityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttributeEntityAllUpdatablePropertiesEquals(AttributeEntity expected, AttributeEntity actual) {
        assertAttributeEntityUpdatableFieldsEquals(expected, actual);
        assertAttributeEntityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttributeEntityAutoGeneratedPropertiesEquals(AttributeEntity expected, AttributeEntity actual) {
        assertThat(expected)
            .as("Verify AttributeEntity auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttributeEntityUpdatableFieldsEquals(AttributeEntity expected, AttributeEntity actual) {
        assertThat(expected)
            .as("Verify AttributeEntity relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttributeEntityUpdatableRelationshipsEquals(AttributeEntity expected, AttributeEntity actual) {
        assertThat(expected)
            .as("Verify AttributeEntity relationships")
            .satisfies(e -> assertThat(e.getConstructorEntity()).as("check constructorEntity").isEqualTo(actual.getConstructorEntity()));
    }
}
